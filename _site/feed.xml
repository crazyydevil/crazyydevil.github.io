<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Crazyydevil的博客</title>
    <description></description>
    <link>http://crazyydevil.github.io/</link>
    <atom:link href="http://crazyydevil.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 03 Sep 2016 18:25:35 +0800</pubDate>
    <lastBuildDate>Sat, 03 Sep 2016 18:25:35 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>masonry介绍与使用</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#xibstoryboard&quot; id=&quot;markdown-toc-xibstoryboard&quot;&gt;关于xib、Storyboard、手写代码的选择&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;直接说结论&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#masonry-autolayout&quot; id=&quot;markdown-toc-masonry-autolayout&quot;&gt;masonry-autolayout框架&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#masonry&quot; id=&quot;markdown-toc-masonry&quot;&gt;masonry介绍&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#masonry-1&quot; id=&quot;markdown-toc-masonry-1&quot;&gt;masonry使用&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#masonry-githubhttpsgithubcomsnapkitmasonry&quot; id=&quot;markdown-toc-masonry-githubhttpsgithubcomsnapkitmasonry&quot;&gt;masonry 在&lt;a href=&quot;https://github.com/SnapKit/Masonry&quot;&gt;github的地址&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#masonry-&quot; id=&quot;markdown-toc-masonry-&quot;&gt;masonry 的安装&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#demo1&quot; id=&quot;markdown-toc-demo1&quot;&gt;demo1&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#view200&quot; id=&quot;markdown-toc-view200&quot;&gt;设置一个view，位于视图最中心，且长宽为200&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;将长宽改为150，其他不变&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;使用重置约束将长宽修改为200&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#demo2&quot; id=&quot;markdown-toc-demo2&quot;&gt;demo2&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;总结&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;masonry介绍与使用&lt;/p&gt;

&lt;h2 id=&quot;xibstoryboard&quot;&gt;关于xib、Storyboard、手写代码的选择&lt;/h2&gt;

&lt;p&gt;业内对这个讨论的文章很多，基本也达成共识。
可以看一下唐巧博客里的&lt;a href=&quot;http://blog.devtang.com/2015/03/22/ios-dev-controversy-2/&quot;&gt;这篇文章&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;直接说结论&lt;/h3&gt;
&lt;p&gt;对于相对静态的页面，需求变更少，个人或者小团队，开发速度要求更快的，建议多使用xib和storyboard。&lt;/p&gt;

&lt;p&gt;对于复杂页面，需求变更多，团队协作，代码结构要求更高的，建议多使用手写代码&lt;/p&gt;

&lt;h2 id=&quot;masonry-autolayout&quot;&gt;masonry-autolayout框架&lt;/h2&gt;

&lt;h3 id=&quot;masonry&quot;&gt;masonry介绍&lt;/h3&gt;

&lt;p&gt;苹果在ios6之前，iphone使用320*480的点位进行开发，ipad则使用1027*768，不需要考虑适配问题，那时候大家都直接使用frame 绝对坐标。&lt;/p&gt;

&lt;p&gt;但是在ios6出来之后，苹果出现了不同屏幕尺寸，iOS开发者面临着为不同尺寸设备开发的问题。当然苹果也提供了autolayout的方案，autolayout对xib和storyboard更友好，可以使用拖拽进行适配，但是xib和storyboard也有缺点，对于那些喜欢用代码来进行界面编写的开发者，也可以使用autolayout本身提供的代码，不过我相信大多数人使用的感觉是很不友好。&lt;/p&gt;

&lt;p&gt;而masonry就是为了解决手写界面适配问题而出现的。是目前最流行的autolayout框架&lt;/p&gt;

&lt;h3 id=&quot;masonry-1&quot;&gt;masonry使用&lt;/h3&gt;

&lt;h3 id=&quot;masonry-githubhttpsgithubcomsnapkitmasonry&quot;&gt;masonry 在&lt;a href=&quot;https://github.com/SnapKit/Masonry&quot;&gt;github的地址&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&quot;masonry-&quot;&gt;masonry 的安装&lt;/h3&gt;
&lt;p&gt;masonry 是使用cocoaPod 管理的 在PodFile 文件中加入 
&lt;code class=&quot;highlighter-rouge&quot;&gt;pod &#39;Masonry&#39;&lt;/code&gt;
并使用&lt;code class=&quot;highlighter-rouge&quot;&gt;pod install&lt;/code&gt; 即可&lt;/p&gt;

&lt;h3 id=&quot;demo1&quot;&gt;demo1&lt;/h3&gt;

&lt;h4 id=&quot;view200&quot;&gt;设置一个view，位于视图最中心，且长宽为200&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[self.blueView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(200, 200));
        make.center.equalTo(self.view);
    }];
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d17oy1vhnax1f7.cloudfront.net/items/0G0a3p3d3C0H381z3Z3I/Simulator%20Screen%20Shot%202016%E5%B9%B49%E6%9C%883%E6%97%A5%20%E4%B8%8B%E5%8D%883.40.27.png?v=696a7267&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;将长宽改为150，其他不变&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; [self.blueView mas_updateConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(150, 150));
    }];
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d17oy1vhnax1f7.cloudfront.net/items/2n0C3v2S2Y1M0F453j3E/Simulator%20Screen%20Shot%202016%E5%B9%B49%E6%9C%883%E6%97%A5%20%E4%B8%8B%E5%8D%883.39.26.png?v=63ab33c3&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;使用重置约束将长宽修改为200&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; [self.blueView mas_makeConstraints:^(MASConstraintMaker *make) {
    make.size.mas_equalTo(CGSizeMake(200, 200));
    make.center.equalTo(self.view);
}];

[self.blueView mas_updateConstraints:^(MASConstraintMaker *make) {
    make.size.mas_equalTo(CGSizeMake(150, 150));
}];

[self.blueView mas_remakeConstraints:^(MASConstraintMaker *make) {
    make.size.mas_equalTo(CGSizeMake(200, 200));
}];
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d17oy1vhnax1f7.cloudfront.net/items/0w09140k0v1I3r13382Z/Simulator%20Screen%20Shot%202016%E5%B9%B49%E6%9C%883%E6%97%A5%20%E4%B8%8B%E5%8D%883.38.03.png?v=86f9f716&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上面的demo展示了masonry的三种约束管理&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;mas_makeConstraints 用于初始化的增加约束&lt;/li&gt;
  &lt;li&gt;mas_updateConstraints 当需要修改约束时调用&lt;/li&gt;
  &lt;li&gt;mas_remakeConstraints 移除所有约束再修改&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2和3的区别在于一个是直接覆盖之前的约束，另一个是移除所有的约束再修改&lt;/p&gt;

&lt;p&gt;如果我们使用连续mas_makeConstraints来进行修改，也可以修改的，但是会报异常信息，建议严格按照上面的方法来编写。&lt;/p&gt;

&lt;h3 id=&quot;demo2&quot;&gt;demo2&lt;/h3&gt;

&lt;p&gt;设置一个视图，包含三个view：&lt;/p&gt;

&lt;p&gt;1.ViewA距离顶部10，距离左边20，距离右边20，高度为父视图的1/3；&lt;/p&gt;

&lt;p&gt;2.ViewB顶部距离ViewA底部10，距离底部10，距离左边10，宽为ViewA宽度的三分之一,高为ViewA的3倍&lt;/p&gt;

&lt;p&gt;3.ViewC左边距离ViewB右边10，顶部距离ViewA底部10，距离右边10，距离底部10&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; [self.viewA mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.and.left.equalTo(self.view).with.offset(10);
        make.right.equalTo(self.view).with.offset(-10);
        make.height.equalTo(self.view).with.multipliedBy(1/3.0);
    }];
    
    [self.viewB mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.viewA.mas_bottom).with.offset(10);
        make.left.equalTo(self.view).with.offset(10);
        make.bottom.equalTo(self.view).with.offset(-10);
        make.width.equalTo(self.view).with.multipliedBy(0.5);
    }];
    
    [self.viewC mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.viewA.mas_bottom).with.offset(10);
        make.left.equalTo(self.viewB.mas_right).with.offset(10);
        make.right.equalTo(self.view).with.offset(-10);
        make.bottom.equalTo(self.view).with.offset(-10);
    }];
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d17oy1vhnax1f7.cloudfront.net/items/1n0l3Z3C160i0F2R373j/Simulator%20Screen%20Shot%202016%E5%B9%B49%E6%9C%883%E6%97%A5%20%E4%B8%8B%E5%8D%886.03.35.png?v=803068ca&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;总结&lt;/h4&gt;

&lt;p&gt;1.常用的约束为offset（位移），和multipliedBy（倍率）,注意offset和iOS本身的坐标系一致，有正负之分&lt;/p&gt;

&lt;p&gt;2.make.equalTo,make.greaterThanOrEqualTo make.lessThanOrEqualTo 比较&lt;/p&gt;

&lt;p&gt;3.添加约束必须在该控件已经添加到父控件之后&lt;/p&gt;

&lt;p&gt;4.注意equalTo与mas_equalTo的区别 mas_equalTo增加了类型转换
&lt;code class=&quot;highlighter-rouge&quot;&gt;#define mas_equalTo(...)                 equalTo(MASBoxValue((__VA_ARGS__)))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;当使用and连接时，用equalTo&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;make.top.and.left.equalTo(self.view).with.offset(10);&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 29 Aug 2016 15:00:00 +0800</pubDate>
        <link>http://crazyydevil.github.io/2016/08/29/masonry%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8-1/</link>
        <guid isPermaLink="true">http://crazyydevil.github.io/2016/08/29/masonry%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8-1/</guid>
        
        <category>UIView</category>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>代理为什么要使用weak修饰</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;例子&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#weak&quot; id=&quot;markdown-toc-weak&quot;&gt;使用weak&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#carh&quot; id=&quot;markdown-toc-carh&quot;&gt;Car.h&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#carm&quot; id=&quot;markdown-toc-carm&quot;&gt;Car.m&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;运行项目 得到执行结果&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#strong&quot; id=&quot;markdown-toc-strong&quot;&gt;使用strong&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;运行项目 得到执行结果&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;代理为什么要使用weak修饰&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;例子&lt;/h2&gt;

&lt;h3 id=&quot;weak&quot;&gt;使用weak&lt;/h3&gt;

&lt;h4 id=&quot;carh&quot;&gt;Car.h&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@protocol&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CarDelegate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playCar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NSObject&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CarDelegate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;carm&quot;&gt;Car.m&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#import &quot;Car.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dealloc&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;执行 car dealloc 方法&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;运行项目 得到执行结果&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2016-08-31 11:12:54.078 demoOne[947:28761] 开车
2016-08-31 11:12:54.079 demoOne[947:28761] 执行 people dealloc 方法
2016-08-31 11:12:54.079 demoOne[947:28761] 执行 car dealloc 方法 #### 我们发现car和peopel 都执行了销毁代码，说明使用weak时，可以使delegate指向的对象释放，delegate所在对象也能顺利释放，这和weak的arc用法一致。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;strong&quot;&gt;使用strong&lt;/h3&gt;
&lt;p&gt;让我们把delegate的属性设置为strong试试&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CarDelegate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-2&quot;&gt;运行项目 得到执行结果&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2016-08-31 11:38:45.848 demoOne[1128:38638] 开车
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我们发现car和peopel 都没有执行了销毁代码，说明使用strong时，delegate指向的对象当没有额外的对象来持有时，没有顺利释放销毁。&lt;/p&gt;

&lt;p&gt;得出结论：当delegate使用weak时，在对象没有其他引用时，可以顺利释放并销毁。&lt;/p&gt;

</description>
        <pubDate>Fri, 15 Jul 2016 15:00:00 +0800</pubDate>
        <link>http://crazyydevil.github.io/2016/07/15/%E4%BB%A3%E7%90%86%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%94%A8weak%E4%BF%AE%E9%A5%B0-1/</link>
        <guid isPermaLink="true">http://crazyydevil.github.io/2016/07/15/%E4%BB%A3%E7%90%86%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%94%A8weak%E4%BF%AE%E9%A5%B0-1/</guid>
        
        <category>修饰符</category>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>学习用github搭建个人博客</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#github-&quot; id=&quot;markdown-toc-github-&quot;&gt;github 注册个人二级域名&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jekyll-&quot; id=&quot;markdown-toc-jekyll-&quot;&gt;jekyll 搭建博客模版&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#markdown&quot; id=&quot;markdown-toc-markdown&quot;&gt;markdown使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;学习用github搭建个人博客&lt;/p&gt;

&lt;h2 id=&quot;github-&quot;&gt;github 注册个人二级域名&lt;/h2&gt;

&lt;h2 id=&quot;jekyll-&quot;&gt;jekyll 搭建博客模版&lt;/h2&gt;

&lt;h2 id=&quot;markdown&quot;&gt;markdown使用&lt;/h2&gt;

</description>
        <pubDate>Sun, 10 Jul 2016 15:00:00 +0800</pubDate>
        <link>http://crazyydevil.github.io/2016/07/10/github-blog-1/</link>
        <guid isPermaLink="true">http://crazyydevil.github.io/2016/07/10/github-blog-1/</guid>
        
        <category>Github</category>
        
        
        <category>GitHub</category>
        
      </item>
    
  </channel>
</rss>
